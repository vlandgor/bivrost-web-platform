@model SessionViewModel

@{
    ViewData["Title"] = "Session";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="session-page">
    <div class="project-menu-panel">
        <text class="project-full-name">@Model.Project.Name</text>
        <div style="flex-grow: 1;"></div>
        <a asp-controller="Project" asp-action="Project" asp-route-projectId="@Model.Project.Id" class="project-menu-button active-menu-button">PROJECT</a>
        <a class="project-menu-button">ANALYTICS</a>
        <a class="project-menu-button">SETTINGS</a>
    </div>
    
    <div class="block" id="div1">
            <div class="block-top">
                <div class="block-name">@Model.Session.s_name</div>
                <div style="flex-grow: 1;"></div>
                <button class="block-option-button" onclick="makeFullscreen('div1')">[ ]</button>
                <button class="block-option-button">x</button>
            </div>
            <div class="project-menu-panel">
                <button class="project-menu-button active-menu-button" data-table="studentsTable" onclick="toggleTable(event)">Students</button>
                <button class="project-menu-button" data-table="instructorsTable" onclick="toggleTable(event)">Instructors</button>
                <div style="flex-grow: 1;"></div>
                <button class="create-button">ADD STUDENT</button>
            </div>
            <table id="studentsTable">
                <thead>
                    <tr>
                        <th class="left-element">NAME</th>
                        <th class="centered-table-element regular-column">STATUS</th>
                        <th class="centered-table-element regular-column">TIME</th>
                        <th class="centered-table-element regular-column">PROGRESS</th>
                        <th class="centered-table-element regular-column">OPTIONS</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Student student in Model.Session.s_students)
                    {
                        <tr>
                            <td class="left-element">@student.st_name</td>
                            <td class="centered-table-element regular-column">@student.st_status</td>
                            <td class="centered-table-element regular-column">26 minutes</td>
                            <td class="centered-table-element regular-column">@student.st_progress</td>
                            <td class="centered-table-element regular-column">
                                <a>
                                    <button class="table-more-option">More</button>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <table id="instructors" style="display: none;">
                @* <thead> *@
                @*     <tr> *@
                @*         <th class="left-element">NAME</th> *@
                @*         <th class="centered-table-element regular-column">STATUS</th> *@
                @*         <th class="centered-table-element regular-column">TIME</th> *@
                @*         <th class="centered-table-element regular-column">PROGRESS</th> *@
                @*         <th class="centered-table-element regular-column">OPTIONS</th> *@
                @*     </tr> *@
                @* </thead> *@
                @* <tbody> *@
                @*     @foreach (Session session in Model.Sessions) *@
                @*     { *@
                @*         if (session.s_status) *@
                @*         { *@
                @*             return; *@
                @*         } *@
                @*          *@
                @*         string sessionStatusClass = session.s_status ? "project-status-active" : "project-status-finished"; *@
                @* *@
                @*         <tr> *@
                @*             <td class="left-element">@session.s_name</td> *@
                @*             <td class="centered-table-element regular-column">Connected</td> *@
                @*             <td class="centered-table-element regular-column">21.21.2121</td> *@
                @*             <td class="centered-table-element regular-column">@session.s_students.Count</td> *@
                @*             <td class="centered-table-element regular-column">21 minutes</td> *@
                @*             <td class="centered-table-element regular-column"> *@
                @*                 <button class="table-more-option">Join</button> *@
                @*             </td> *@
                @*         </tr> *@
                @*     } *@
                @* </tbody> *@
            </table>
        </div>
    
    @* <div class="players-panel"> *@
    @*     <div class="select-segment"> *@
    @*         <button id="studentsBtn" class="segment-button active-underline">Students</button> *@
    @*         <button id="instructorsBtn" class="segment-button">Instructors</button> *@
    @*         <div style="flex: 1"></div> *@
    @*         <button id="createStudentButton" type="button" class="active-colored-button">Add Student</button> *@
    @*     </div> *@
    @*     <table id="StudentsSessionTable" class="tableList"> *@
    @*         <thead> *@
    @*         <tr> *@
    @*             <th class="empty-th"></th> *@
    @*             <th class="left-element">NAME</th> *@
    @*             <th class="center-element regular-cell">STATUS</th> *@
    @*             <th class="center-element regular-cell">TIME</th> *@
    @*             <th class="center-element regular-cell">PROGRESS</th> *@
    @*             <th class="center-element regular-cell">OPTIONS</th> *@
    @*             <th class="empty-th"></th> *@
    @*         </tr> *@
    @*         </thead> *@
    @*         <tbody> *@
    @*         @foreach (var student in Model.Students) *@
    @*         { *@
    @*             string studentStatusClass = student.st_status ? "player-status-connected" : "player-status-disconnected"; *@
    @*             string statusText = @student.st_status ? "CONNECTED" : "DISCONNECTED"; *@
    @* *@
    @*             <tr id="row-@student.st_id"> *@
    @*                 <td class="empty-td"></td> *@
    @*                 <td class="left-element">@student.st_name</td> *@
    @*                 <td class="center-element regular-cell @studentStatusClass status-cell">@statusText</td> *@
    @*                 <td class="center-element regular-cell">0 minutes</td> *@
    @*                 <td class="center-element regular-cell">@student.st_progress%</td> *@
    @*                 <td class="center-element regular-cell"> *@
    @*                     <a id="sessionLink"> *@
    @*                         <div class="actions-button"> *@
    @*                             MORE *@
    @*                         </div> *@
    @*                     </a> *@
    @*                 </td> *@
    @*                 <td class="empty-td"></td> *@
    @*             </tr> *@
    @*         } *@
    @*         </tbody> *@
    @*     </table> *@
    @*     <table id="InstructorsSessionTable" style="display: none"> *@
    @* *@
    @*     </table> *@
    @* </div> *@
</div>

<div class="modal fade" id="createStudentPanel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content modalPanel">
            <div class="modalHeader">
                <label class="modalTitle" id="modalTitle">Add a new student</label>
                <label class="modalTitleDescription" id="modalTitleDescription">Add a new student to the session</label>
            </div>
            @{
                string randomStudentID = Guid.NewGuid().ToString();
            }
            <form>
                <div class="modalBody">
                    <div class="modalBodyContentBlock">
                        <label>Student ID</label>
                        <input type="text" value="@randomStudentID" id="studentIdInput" class="form-control" readonly="readonly"/>
                    </div>
                    <div class="modalBodyContentBlock">
                        <label>Student Name</label>
                        <input type="text" id="studentNameInput" name="studentName" class="form-control"/>
                    </div>
                </div>
                <div class="modalFooter">
                    <div type="button" id="cancelButton" class="footerButton cancelButton" data-dismiss="modal">CANCEL</div>
                    <button type="button" id="createNewStudent" class="footerButton continueButton">CREATE</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.2/signalr.min.js"></script>
    <script>
        $(document).ready(function() {
            // Initialize SignalR connections
            const keepAliveConnection = new signalR.HubConnectionBuilder()
                .withUrl("/keepAliveHub")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            const studentConnection = new signalR.HubConnectionBuilder()
                .withUrl("/studentHub")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            // Modal controls for adding new students
            $('#createStudentButton').click(function() {
                $('#createStudentPanel').modal('show');
            });

            $('#cancelButton').click(function() {
                $('#createStudentPanel').modal('hide');
            });

            // Start KeepAlive Connection
            keepAliveConnection.start().then(function() {
                console.log('Connected to KeepAlive Hub');
            }).catch(function(err) {
                return console.error(err.toString());
            });

            // Start Student Connection
            studentConnection.start().then(function() {
                console.log('Connected to Student Hub');
            }).catch(function(err) {
                return console.error(err.toString());
            });

            // React to the "ClientConnected" event from the server
            keepAliveConnection.on("ClientConnected", function(clientId, message) {
                updateOrCreateRow(clientId, message, "00:00:00", "CONNECTED", "0%"); // Initial connection
            });

            // Update student status based on keep alive messages
            keepAliveConnection.on("UpdateKeepAlive", function(clientId, message) {
                const row = $('#row-' + clientId);
                if (row.length) {
                    row.find('.status-cell').html(message === "Connected" ? '<div class="player-status-connected">CONNECTED</div>' : '<div class="player-status-disconnected">DISCONNECTED</div>');
                }
            });

            // React to the "ClientDisconnected" event
            keepAliveConnection.on("ClientDisconnected", function(clientId) {
                const row = $('#row-' + clientId);
                if (row.length) {
                    row.find('.status-cell').html('<div class="player-status-disconnected">DISCONNECTED</div>');
                }
            });

            document.getElementById("createNewStudent").addEventListener("click", function(event) {
                event.preventDefault();
                var studentId = document.getElementById("studentIdInput").value;
                var studentName = document.getElementById("studentNameInput").value;
                studentConnection.invoke("CreateStudent",'@Model.Project.Id', '@Model.Session.s_id', studentId, studentName).catch(function(err) {
                    console.error(err.toString());
                });
            });
            
            // React to new student creation via Student Hub
            studentConnection.on("StudentCreated", function(studentId, studentName, studentStatus, studentProgress) {
                updateOrCreateRow(studentId, studentName, "0 minutes", studentStatus ? "CONNECTED" : "DISCONNECTED", studentProgress + '%');
                $('#createStudentPanel').modal('hide');
            });

            // Helper function to update or create table row
            function updateOrCreateRow(studentId, studentName, time, status, progress) {                
                let row = $('#row-' + studentId);                
                if (row.length === 0) {
                    $('#StudentsSessionTable tbody').append(
                        `<tr id="row-${studentId}">
                            <td class="empty-td"></td>
                            <td class="left-element">${studentName}</td>
                            <td class="center-element regular-cell player-status-disconnected status-cell">${status}</td>
                            <td class="center-element regular-cell">${time}</td>
                            <td class="center-element regular-cell">${progress}</td>
                            <td class="center-element regular-cell">
                                <a id="sessionLink" href="/Student/Details/${studentId}">
                                    <div class="actions-button">MORE</div>
                                </a>
                            </td>
                            <td class="empty-td"></td>
                        </tr>`
                    );
                } else {
                    row.find('.status-cell').html(status === "CONNECTED" ? '<div class="player-status-connected">CONNECTED</div>' : '<div class="player-status-disconnected">DISCONNECTED</div>');
                }
            }
        });
    </script>
}